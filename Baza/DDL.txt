-- Generated by Oracle SQL Developer Data Modeler 24.3.0.240.1210
--   at:        2025-06-03 02:39:20 CEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE case (
    id_case            INTEGER NOT NULL,
    format             VARCHAR2(10),
    wysokosc           SMALLINT,
    dlugosc            SMALLINT,
    szerokosc          SMALLINT,
    ilosc_wentylatorow SMALLINT
);

ALTER TABLE case ADD CONSTRAINT obudowa_pk PRIMARY KEY ( id_case );

CREATE TABLE cooler (
    id_cooler            INTEGER NOT NULL,
    wysokosc             SMALLINT,
    typ                  VARCHAR2(16),
    ilosc_wentylatorow   SMALLINT,
    kompatybilne_sockety CLOB,
    rgb                  CHAR(1),
    profil               CHAR(1)
);

ALTER TABLE cooler ADD CONSTRAINT cooler_pk PRIMARY KEY ( id_cooler );

CREATE TABLE cpu (
    id_cpu      INTEGER NOT NULL,
    socket      VARCHAR2(8),
    rdzenie     SMALLINT,
    watki       SMALLINT,
    zegar       NUMBER(3, 2),
    ddr         VARCHAR2(4),
    tdp         SMALLINT,
    ma_cooler   CHAR(1),
    podkrecanie CHAR(1)
);

ALTER TABLE cpu ADD CONSTRAINT cpu_pk PRIMARY KEY ( id_cpu );

CREATE TABLE dysk (
    id_dysk          INTEGER NOT NULL,
    typ              VARCHAR2(5),
    interfejs        VARCHAR2(12),
    format           VARCHAR2(12),
    pojemnosc_gb     SMALLINT,
    predkosc_zapisu  SMALLINT,
    predkosc_odczytu SMALLINT
);

ALTER TABLE dysk ADD CONSTRAINT dysk_pk PRIMARY KEY ( id_dysk );

CREATE TABLE gpu (
    id_gpu          INTEGER NOT NULL,
    chipset         VARCHAR2(6),
    vram            SMALLINT,
    gddr            VARCHAR2(5),
    tdp             SMALLINT,
    sloty_obudowy   NUMBER(2, 1),
    ilosc_wiatrakow SMALLINT,
    dlugosc         SMALLINT,
    dual_bios       CHAR(1),
    ilosc_hdmi      SMALLINT,
    ilosc_dp        SMALLINT
);

ALTER TABLE gpu ADD CONSTRAINT gpu_pk PRIMARY KEY ( id_gpu );

CREATE TABLE klienci (
    id_klienta      INTEGER NOT NULL,
    imie            VARCHAR2(64),
    nazwisko        VARCHAR2(64),
    email           VARCHAR2(128),
    telefon         VARCHAR2(20),
    adres           VARCHAR2(255),
    data_dolaczenia DATE,
    haslo           VARCHAR2(256)
);

ALTER TABLE klienci ADD CONSTRAINT klienci_pk PRIMARY KEY ( id_klienta );

CREATE TABLE koszyk (
    id_koszyka        INTEGER NOT NULL,
    nazwa             VARCHAR2(64),
    id_klienta        INTEGER NOT NULL,
    data_utworzenia   DATE,
    data_aktualizacji DATE
);

ALTER TABLE koszyk ADD CONSTRAINT koszyk_pk PRIMARY KEY ( id_koszyka );

CREATE TABLE koszyk_produkty (
    koszyk_id_koszyka INTEGER NOT NULL,
    produkty_id_prod  INTEGER NOT NULL,
    ilosc             SMALLINT
);

ALTER TABLE koszyk_produkty ADD CONSTRAINT koszyk_produkty_pk PRIMARY KEY ( koszyk_id_koszyka,
                                                                            produkty_id_prod );

CREATE TABLE mobo (
    id_mobo          INTEGER NOT NULL,
    socket           VARCHAR2(8),
    ddr              VARCHAR2(4),
    format           VARCHAR2(10),
    max_ram          SMALLINT,
    ilosc_slotow_ram SMALLINT,
    ilosc_slotow_m2  SMALLINT,
    ilosc_pcie_x16   SMALLINT,
    ilosc_pcie_x1    SMALLINT,
    "ilosc_usb_3.0"  SMALLINT,
    wifi             CHAR(1),
    "ilosc_usb_2.0"  SMALLINT,
    ilosc_usb_c      SMALLINT,
    bluetooth        CHAR(1),
    bios_typ         VARCHAR2(10),
    podkrecanie      CHAR(1)
);

ALTER TABLE mobo ADD CONSTRAINT mobo_pk PRIMARY KEY ( id_mobo );

CREATE TABLE produkty (
    id_prod INTEGER NOT NULL,
    nazwa   VARCHAR2(128),
    typ     VARCHAR2(32),
    cena    NUMERIC(10, 2)
);

ALTER TABLE produkty ADD CONSTRAINT produkty_pk PRIMARY KEY ( id_prod );

CREATE TABLE psu (
    id_psu      INTEGER NOT NULL,
    moc         SMALLINT,
    format      VARCHAR2(3),
    modularnosc CHAR(1),
    certyfikat  VARCHAR2(10)
);

ALTER TABLE psu ADD CONSTRAINT psu_pk PRIMARY KEY ( id_psu );

CREATE TABLE ram (
    id_ram           INTEGER NOT NULL,
    pojemnosc_total  SMALLINT,
    liczba_modulow   SMALLINT,
    pojemnosc_modulu SMALLINT,
    taktowanie       SMALLINT,
    clock_latency    SMALLINT,
    ddr              VARCHAR2(4),
    profil           CHAR(1)
);

ALTER TABLE ram ADD CONSTRAINT ram_pk PRIMARY KEY ( id_ram );

CREATE TABLE zamowienia (
    id_zamowienia    INTEGER NOT NULL,
    id_klienta       INTEGER NOT NULL,
    data_zlozenia    DATE,
    data_zakonczenia DATE,
    status           VARCHAR2(20),
    adres_dostawy    VARCHAR2(255),
    uwagi            CLOB
);

ALTER TABLE zamowienia ADD CONSTRAINT zamowienia_pk PRIMARY KEY ( id_zamowienia );

CREATE TABLE zamowienia_produkty (
    id_prod       INTEGER NOT NULL,
    id_zamowienia INTEGER NOT NULL,
    ilosc         SMALLINT
);

ALTER TABLE zamowienia_produkty ADD CONSTRAINT zamowienia_produkty_pk PRIMARY KEY ( id_zamowienia,
                                                                                    id_prod );

CREATE TABLE zestawy (
    id_zestawu      INTEGER NOT NULL,
    nazwa           VARCHAR2(64),
    id_klienta      INTEGER NOT NULL,
    data_utworzenia DATE
);

ALTER TABLE zestawy ADD CONSTRAINT zestawy_pk PRIMARY KEY ( id_zestawu );

CREATE TABLE zestawy_produkty (
    id_prod    INTEGER NOT NULL,
    id_zestawu INTEGER NOT NULL,
    ilosc      SMALLINT
);

ALTER TABLE zestawy_produkty ADD CONSTRAINT zestawy_produkty_pk PRIMARY KEY ( id_prod,
                                                                              id_zestawu );

ALTER TABLE cooler
    ADD CONSTRAINT cooler_produkty_fk
        FOREIGN KEY ( id_cooler )
            REFERENCES produkty ( id_prod )
                ON DELETE CASCADE;

ALTER TABLE dysk
    ADD CONSTRAINT dysk_produkty_fk
        FOREIGN KEY ( id_dysk )
            REFERENCES produkty ( id_prod )
                ON DELETE CASCADE;

ALTER TABLE gpu
    ADD CONSTRAINT gpu_produkty_fk
        FOREIGN KEY ( id_gpu )
            REFERENCES produkty ( id_prod )
                ON DELETE CASCADE;

ALTER TABLE cpu
    ADD CONSTRAINT id_cpu
        FOREIGN KEY ( id_cpu )
            REFERENCES produkty ( id_prod )
                ON DELETE CASCADE;

ALTER TABLE zamowienia
    ADD CONSTRAINT id_klienta FOREIGN KEY ( id_klienta )
        REFERENCES klienci ( id_klienta );

ALTER TABLE koszyk
    ADD CONSTRAINT id_klientav2 FOREIGN KEY ( id_klienta )
        REFERENCES klienci ( id_klienta );

ALTER TABLE mobo
    ADD CONSTRAINT id_mobo
        FOREIGN KEY ( id_mobo )
            REFERENCES produkty ( id_prod )
                ON DELETE CASCADE;

ALTER TABLE koszyk_produkty
    ADD CONSTRAINT koszyk_produkty_koszyk_fk FOREIGN KEY ( koszyk_id_koszyka )
        REFERENCES koszyk ( id_koszyka );

ALTER TABLE koszyk_produkty
    ADD CONSTRAINT koszyk_produkty_produkty_fk FOREIGN KEY ( produkty_id_prod )
        REFERENCES produkty ( id_prod );

ALTER TABLE case
    ADD CONSTRAINT obudowa_produkty_fk
        FOREIGN KEY ( id_case )
            REFERENCES produkty ( id_prod )
                ON DELETE CASCADE;

ALTER TABLE psu
    ADD CONSTRAINT psu_produkty_fk
        FOREIGN KEY ( id_psu )
            REFERENCES produkty ( id_prod )
                ON DELETE CASCADE;

ALTER TABLE ram
    ADD CONSTRAINT ram_produkty_fk
        FOREIGN KEY ( id_ram )
            REFERENCES produkty ( id_prod )
                ON DELETE CASCADE;

ALTER TABLE zamowienia_produkty
    ADD CONSTRAINT zam_prod_produkty_fk FOREIGN KEY ( id_prod )
        REFERENCES produkty ( id_prod );

ALTER TABLE zamowienia_produkty
    ADD CONSTRAINT zam_prod_zamowienia_fk FOREIGN KEY ( id_zamowienia )
        REFERENCES zamowienia ( id_zamowienia );

ALTER TABLE zestawy_produkty
    ADD CONSTRAINT zest_prod_produkty_fk FOREIGN KEY ( id_prod )
        REFERENCES produkty ( id_prod );

ALTER TABLE zestawy_produkty
    ADD CONSTRAINT zest_prod_zestawy_fk FOREIGN KEY ( id_zestawu )
        REFERENCES zestawy ( id_zestawu );

ALTER TABLE zestawy
    ADD CONSTRAINT zestawy_klienci_fk
        FOREIGN KEY ( id_klienta )
            REFERENCES klienci ( id_klienta )
                ON DELETE CASCADE;



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            16
-- CREATE INDEX                             0
-- ALTER TABLE                             33
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
